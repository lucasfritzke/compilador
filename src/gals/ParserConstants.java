package gals;

public interface ParserConstants
{
    int START_SYMBOL = 37;

    int FIRST_NON_TERMINAL    = 37;
    int FIRST_SEMANTIC_ACTION = 70;

    int[][] PARSER_TABLE =
    {
        { -1, -1, -1, -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  1, -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  3, -1, -1, -1, -1, -1, -1, -1, -1,  3,  3, -1,  3,  3, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  2, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  4, -1, -1, -1, -1, -1, -1, -1, -1,  7,  5, -1,  6,  8, -1,  8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 11,  9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, 23, 21, -1, 22, 24, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 15, 16, 17, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, 13, 13, 13, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 44, 44, 44, 44, -1, -1, -1, 44, -1, -1, -1, -1, -1, -1, 44, -1, -1, -1, 44, -1, -1, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, 44, 44, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 27, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 29, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 33, 33, 33, 33, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, 33, -1, -1, -1, 33, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, 33, 33, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, 39, 39, -1, 39, 39, -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 40, -1, -1, -1, -1, -1, -1, -1, -1, 40, 40, -1, 40, 40, -1, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, -1, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 48, 48, 48, 48, -1, -1, -1, 50, -1, -1, -1, -1, -1, -1, 49, -1, -1, -1, 51, -1, -1, -1, -1, 48, -1, -1, -1, -1, -1, -1, -1, 48, 48, -1, -1 },
        { -1, 52, 52, 52, 52, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 52, -1, -1, -1, -1, -1, -1, -1, 52, 52, -1, -1 },
        { -1, 59, 59, 59, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 59, -1, -1, -1, -1, -1, -1, -1, 59, 59, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 55, 56, 57, 58, -1, -1, -1, -1 },
        { -1, 63, 63, 63, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, -1, -1, -1, -1, -1, -1, -1, 63, 63, -1, -1 },
        { -1, 67, 68, 69, 70, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, -1, -1, -1, -1, -1, -1, -1, 72, 73, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 53, -1, 53, 53, -1, -1, -1, 53, -1, -1, 54, 54, 54, 54, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, 47, -1, 45, 45, -1, -1, -1, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 60, -1, 60, 60, -1, -1, -1, 60, -1, -1, 60, 60, 60, 60, 61, 62, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 64, 64, -1, 64, 64, -1, -1, -1, 64, -1, -1, 64, 64, 64, 64, 64, 64, 65, 66 }
    };

    int[][] PRODUCTIONS = 
    {
        { 10, 13, 27, 38, 28 },
        { 40, 22, 39 },
        {  0 },
        { 40, 22, 39 },
        { 44, 41 },
        { 48 },
        { 52 },
        { 55 },
        { 59 },
        { 24, 43 },
        {  0 },
        { 23, 47 },
        {  2, 45 },
        {  0 },
        { 21,  2, 45 },
        {  3 },
        {  4 },
        {  5 },
        {  9 },
        { 16 },
        { 46 },
        { 48 },
        { 52 },
        { 55 },
        { 59 },
        { 44, 23, 47 },
        { 12, 25, 49, 26 },
        { 50, 44, 51 },
        {  5, 21 },
        {  0 },
        { 22, 50, 44, 51 },
        {  0 },
        { 14, 25, 53, 26 },
        { 47, 54 },
        { 21, 47, 54 },
        {  0 },
        { 11, 25, 47, 26, 27, 57, 28, 56 },
        {  0 },
        {  8, 27, 57, 28 },
        { 42, 22, 58 },
        { 42, 22, 58 },
        {  0 },
        { 17, 25, 47, 26,  7, 27, 57, 28 },
        { 15, 27, 57, 28, 17, 25, 47, 26,  7, 27 },
        { 60, 67 },
        {  0 },
        { 18, 60, 67 },
        { 19, 60, 67 },
        { 61 },
        { 16 },
        {  9 },
        { 20, 60 },
        { 62, 66 },
        {  0 },
        { 63, 62 },
        { 29 },
        { 30 },
        { 31 },
        { 32 },
        { 64, 68 },
        {  0 },
        { 33, 64, 68 },
        { 34, 64, 68 },
        { 65, 69 },
        {  0 },
        { 35, 65, 69 },
        { 36, 65, 69 },
        {  2 },
        {  3 },
        {  4 },
        {  5 },
        { 25, 47, 26 },
        { 33, 65 },
        { 34, 65 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "esperado EOF", // LEMBRAR DE COLOCAR COMENTARIOS
        "esperado identificador",
        "esperado constante_int", 
        "esperado constante_float",
        "esperado constante_string",
        "esperado reservada",
        "esperado do",
        "esperado else",
        "esperado false",
        "esperado fun",
        "esperado if",
        "esperado in",
        "esperado main",
        "esperado out",
        "esperado repeat",
        "esperado true",
        "esperado while",
        "esperado &",
        "esperado |",
        "esperado !",
        "esperado ,",
        "esperado ;",
        "esperado =",
        "esperado :",
        "esperado (",
        "esperado )",
        "esperado {",
        "esperado }",
        "esperado ==",
        "esperado !=",
        "esperado <",
        "esperado >",
        "esperado +",
        "esperado -",
        "esperado *",
        "esperado /",
        "esperado fun  ",//"<inicio> inv�lido",
        "esperado identificador if in out repeat while   ",//"<lista_instrucoes> inv�lido",
        "esperado identificador if in out repeat while }", // "<repeat_instrucoes> inv�lido",
        "esperado identificador if in out repeat while",// "<instrucao> inv�lido",
        "esperado ; = :",// "<dec> inv�lido",
        "esperado identificador if in out repeat while",// "<comando> inv�lido",
        "esperado ",// "<valor> inv�lido",
        "<lista_id> inv�lido",
        "esperado , ; = : )",//"<repeat_id> inv�lido",
        "<atribuicao> inv�lido",
        "esperado expressao",//"<expressao> inv�lido",
        "<entrada_dados> inv�lido",
        "<lista_entrada> inv�lido",
        "<opcional_string> inv�lido",
        "<repeat_entrada> inv�lido",
        "<saida_dados> inv�lido",
        " esperado expressao",//"<lista_expressoes> inv�lido",
        "<repeat_expressao> inv�lido", // tambem?
        "<selecao> inv�lido",
        "<else> inv�lido",
        "<lista_comandos> inv�lido",
        "<repeat_lista_comandos> inv�lido",
        "<repeticao> inv�lido",
        "esperado expressao",//"<elemento> inv�lido",
        "esperado expressao",//"<relacional> inv�lido",
        "esperado expressao",//"<aritmetica> inv�lido",
        "<operador_relacional> inv�lido",
        "esperado expressao",//"<termo> inv�lido",
        "esperado expressao",//"<fator> inv�lido",
        "esperado expressao",//"<relacional_> inv�lido",
        "esperado expressao",//"<expressao_> inv�lido",
        "esperado expressao",//"<aritmetica_> inv�lido",
        "esperado expressao"//"<termo_> inv�lido"
    };
}

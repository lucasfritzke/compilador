package gals;

public interface ParserConstants
{
    int START_SYMBOL = 37;

    int FIRST_NON_TERMINAL    = 37;
    int FIRST_SEMANTIC_ACTION = 70;

    int[][] PARSER_TABLE =
    {
        { -1, -1, -1, -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  1, -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  3, -1, -1, -1, -1, -1, -1, -1, -1,  3,  3, -1,  3,  3, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  2, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  4, -1, -1, -1, -1, -1, -1, -1, -1,  7,  5, -1,  6,  8, -1,  8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 11,  9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, 23, 21, -1, 22, 24, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 15, 16, 17, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, 13, 13, 13, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 44, 44, 44, 44, -1, -1, -1, 44, -1, -1, -1, -1, -1, -1, 44, -1, -1, -1, 44, -1, -1, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, 44, 44, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 27, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 29, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 33, 33, 33, 33, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, 33, -1, -1, -1, 33, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, 33, 33, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, 39, 39, -1, 39, 39, -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 40, -1, -1, -1, -1, -1, -1, -1, -1, 40, 40, -1, 40, 40, -1, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, -1, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 48, 48, 48, 48, -1, -1, -1, 50, -1, -1, -1, -1, -1, -1, 49, -1, -1, -1, 51, -1, -1, -1, -1, 48, -1, -1, -1, -1, -1, -1, -1, 48, 48, -1, -1 },
        { -1, 52, 52, 52, 52, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 52, -1, -1, -1, -1, -1, -1, -1, 52, 52, -1, -1 },
        { -1, 59, 59, 59, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 59, -1, -1, -1, -1, -1, -1, -1, 59, 59, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 55, 56, 57, 58, -1, -1, -1, -1 },
        { -1, 63, 63, 63, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, -1, -1, -1, -1, -1, -1, -1, 63, 63, -1, -1 },
        { -1, 67, 68, 69, 70, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, -1, -1, -1, -1, -1, -1, -1, 72, 73, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 53, -1, 53, 53, -1, -1, -1, 53, -1, -1, 54, 54, 54, 54, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, 47, -1, 45, 45, -1, -1, -1, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 60, -1, 60, 60, -1, -1, -1, 60, -1, -1, 60, 60, 60, 60, 61, 62, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 64, 64, -1, 64, 64, -1, -1, -1, 64, -1, -1, 64, 64, 64, 64, 64, 64, 65, 66 }
    };

    int[][] PRODUCTIONS = 
    {
        { 170,  10,  13,  27,  38,  28, 171 },
        {  40,  22,  39 },
        {   0 },
        {  40,  22,  39 },
        {  44,  41 },
        {  48 },
        {  52 },
        {  55 },
        {  59 },
        {  24,  43, 196 },
        { 197 },
        {  23,  47, 198 },
        {   2, 195,  45 },
        {   0 },
        {  21,   2, 195,  45 },
        {   3 },
        {   4 },
        {   5 },
        {   9 },
        {  16 },
        {  46 },
        {  48 },
        {  52 },
        {  55 },
        {  59 },
        {  44,  23,  47, 198 },
        {  12,  25,  49,  26 },
        {  50,  44, 199,  51 },
        {   5, 200,  21 },
        {   0 },
        {  22,  50,  44, 199,  51 },
        {   0 },
        {  14,  25,  53,  26 },
        {  47, 172,  54 },
        {  21,  47, 172,  54 },
        {   0 },
        {  11,  25,  47,  26, 188,  27,  57,  28,  56, 189 },
        {   0 },
        { 190,   8,  27,  57,  28 },
        {  42,  22,  58 },
        {  42,  22,  58 },
        {   0 },
        { 191,  17,  25,  47,  26, 192,   7,  27,  57,  28, 193 },
        { 191,  15,  27,  57,  28,  17,  25,  47,  26, 194 },
        {  60,  67 },
        {   0 },
        {  18,  60, 173,  67 },
        {  19,  60, 174,  67 },
        {  61 },
        {  16, 175 },
        {   9, 176 },
        {  20,  60, 177 },
        {  62,  66 },
        {   0 },
        {  63, 178,  62, 179 },
        {  29 },
        {  30 },
        {  31 },
        {  32 },
        {  64,  68 },
        {   0 },
        {  33,  64, 180,  68 },
        {  34,  64, 181,  68 },
        {  65,  69 },
        {   0 },
        {  35,  65, 182,  69 },
        {  36,  65, 183,  69 },
        {   2, 201 },
        {   3, 184 },
        {   4, 185 },
        {   5, 186 },
        {  25,  47,  26 },
        {  33,  65 },
        {  34,  65, 187 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "esperado EOF", // "Era esperado fim de programa",
        "esperado identificador", //"Era esperado identificador",
        "esperado constante_int", //"Era esperado int",
        "esperado constante_float", //"Era esperado float",
        "esperado constante_string", //"Era esperado string",
        "esperado reservada", //"Era esperado reservada",
        "esperado do", //"Era esperado do",
        "esperado else", //"Era esperado else",
        "esperado false", //"Era esperado false",
        "esperado fun", //"Era esperado fun",
        "esperado if", //"Era esperado if",
        "esperado in", //"Era esperado in",
        "esperado main", //"Era esperado main",
        "esperado out", //"Era esperado out",
        "esperado repeat", //"Era esperado repeat",
        "esperado true", //"Era esperado true",
        "esperado while", //"Era esperado while",
        "esperado &", //"Era esperado and",
        "esperado |", //"Era esperado or",
        "esperado !", //"Era esperado not",
        "esperado ,", //"Era esperado virgula",
        "esperado ;", //"Era esperado ponto_virgula",
        "esperado =", //"Era esperado recebe",
        "esperado :", //"Era esperado dois_pontos",
        "esperado (", //"Era esperado abre_parenteses",
        "esperado )", //"Era esperado fecha_parenteses",
        "esperado {", //"Era esperado abre_chaves",
        "esperado }", //"Era esperado fecha_chaves",
        "esperado ==", //"Era esperado igual",
        "esperado !=", //"Era esperado diferente",
        "esperado <", //"Era esperado menor",
        "esperado >", //"Era esperado maior",
        "esperado +", //"Era esperado add",
        "esperado -", //"Era esperado sub",
        "esperado *", //"Era esperado mult",
        "esperado /", //"Era esperado div",
        "esperado fun  ",//"<inicio> inv�lido",
        "esperado identificador if in out repeat while   ",//"<lista_instrucoes> inv�lido",
        "esperado identificador if in out repeat while }", // "<repeat_instrucoes> inv�lido",
        "esperado identificador if in out repeat while",// "<instrucao> inv�lido",
        "esperado ; = :",// "<dec> inv�lido",
        "esperado identificador if in out repeat while",// "<comando> inv�lido",
        "esperado constante_int constante_float constante_string false true ",// "<valor> inv�lido",
        "esperado identificador",// "<lista_id> inv�lido",
        "esperado , ; = : )",//"<repeat_id> inv�lido",
        "esperado indentificador ",// "<atribuicao> inv�lido",
        "esperado expressao",//"<expressao> inv�lido",
        "esperado in ", //"<entrada_dados> inv�lido"
        "esperado identificador constante_string", //"<lista_entrada> inv�lido"
        "esperado identificador constante_string ", //"<opcional_string> inv�lido"
        "esperado ; )", //"<repeat_entrada> inv�lido"
        "esperado out ", //"<saida_dados> inv�lido"
        " esperado expressao",//"<lista_expressoes> inv�lido",
        "esperado , ) ",// "<repeat_expressao> inv�lido",
        "esperado if ", // "<selecao> inv�lido",
        "esperado else ; ", // "<else> inv�lido",
        "esperado identificador if in out repeat while", // "<lista_comandos> inv�lido",
        "esperado identificador if in out repeat while }", // "<repeat_lista_comandos> inv�lido",
        "esperado repeat while", // "<repeticao> inv�lido",
        "esperado expressao",//"<elemento> inv�lido",
        "esperado expressao",//"<relacional> inv�lido",
        "esperado expressao",//"<aritmetica> inv�lido",
        "esperado == != < > ", // "<operador_relacional> inv�lido",
        "esperado expressao",//"<termo> inv�lido",
        "esperado expressao",//"<fator> inv�lido",
        "esperado expressao",//"<relacional_> inv�lido",
        "esperado expressao",//"<expressao_> inv�lido",
        "esperado expressao",//"<aritmetica_> inv�lido",
        "esperado expressao"//"<termo_> inv�lido"
    };
}
